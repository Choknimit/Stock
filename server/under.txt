// การ Update มี 2 วิธี วิธีที่ 1 คือการ find ขึ้นมาก่อน วิธีที่ 2 คือการใช้ updateOne ********************************
// // วิธีที่ 1 การ find ข้อมูลขึ้นมาก่อนแล้วมาเลือก feild ที่ต้องการ Update ********************************
        // const prd = await Prd.findById(id)
        // // prd.name dotprdname คือ feild ที่อยู่ในฐานข้อมูลของเรา, เท่ากับ prdname คืออันที่เราจะให้ทำการ update ********************************
        // prd.prdname = prdname
        // prd.prdprice = prdprice
        // prd.prdphoto = prdphoto 
        // prd.prddes = prddes
        // await prd.save()
        // console.log(prd)

------------------------------------------------------------------------------------------------------------------------------------------------------------

        // // ใช้ findByIdAndUpdate หา id ก่อนที่จะทำการ update และจะโชว์ค่าเก่าออกมาก่อนที่จะ update
        // const prd = await Prd.findByIdAndUpdate(id, {
        //     prdname: prdname,
        //     prdprice: prdprice,
        //     prdphoto: prdphoto,
        //     prddes: prddes
        // })

------------------------------------------------------------------------------------------------------------------------------------------------------------

        // ใช้ updateOne
        const { id } = req.params
        cosnt { prdname, prdprice, prdphoto, prddes } = req.body
        const prd = await Prd.updateOne({ _id: id }, {
                prdname: prdname,
                prdprice: prdprice,
                prdphoto: prdphoto,
                prddes: prddes
        })
            
        // res.status(200).json({
        //     message: 'Update Successfully'
        // })

------------------------------------------------------------------------------------------------------------------------------------------------------------

mongoDB -> updateOne() เหมือนจะมีปัญหาเวลา log ออกมามันจะส่งค่า modifiedCount ออกมา แบบปกติถ้ามีการเปลี่ยนแปลงจะส่งเลข 1 ถ้าไม่จะเลข 0 แต่ปัญหาที่เจอคือ เวลากดส่งค่าเก่าที่ไม่มีการเปลี่ยนแปลง modifiedCount จะไม่กลายเป็น 0 แต่จะกลายเป็น 1 แทน // วิธีแก้ที่เจอมาให้ลบ timestamps: true ใน model ออก จะเป็นปกติ 
---------------- ไม่รู้มีวิธีแก้แบบอื่นอีกไหม รอหาคำตอบ --------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------

dotmap เป็น function พื้นฐานของ javascript เอาไว้แก้ไขพวก Array แก้ไขข้อมูลต่างๆ จากรูปแบบนึงไปเป็นอีกรูปแบบนึง


การทำ populate คือการ join table เช่นอยากรู้ว่าร้านอาหารมีเมนูไหนบ้าง หรือประเภทสินค้าหนึ่งประเภทมีสินค้าประเภทเดียวกันอะไรบ้าง

การทำ fk คือตั้งชื่อ fied ชื่ออะไรขึ้นมาก็ได้ สินค้าตัวนี้อยู่ที่ประเภทไหน
        const productSchema = Schema({ // model product
                prdname: { type: String, require: true },
                prdprice: { type: String, require: true },
                prdphoto: { type: String, require: true, default: 'nopic.png'},
                prddes: { type: String, }
        (fk)    typeprd: { type: Schema.Types.ObjectId, ref: 'ProductType' } //ต้องกำหนดให้เป็น type ObjectId แล้ว ref ไปที่ model ที่เราต้องการ model ที่เรา ref คือ ProductType          

                // const prdtype = mongoose.model('ตัวนี้คือ model ที่เรา ref -> ProductType ', prdtypeSchema) //model productType
},)

วิธีการ populate ต้องทำการประกาศ fk ก่อนถึงจะทำการ populate ได้เวลา populate จะมีลักษณะแบบนี้
        const prds = await Prd.find().populate('typeprd')
ประกาศตัวแปร prds ให้มาเก็บค่าไว้ แล้วให้ Prd.find().populate fied ที่ได้ทำการ fk  ไว้ในที่นี้คือ typeprd ตัวอย่าง Json ที่ได้จากการ populate
{
            "id": "6437fc7dca033324eea13a4f", // ส่วนของ model product
            "prdname": "Devanom",
            "prdprice": "126.00",
            "prdphoto": "http://localhost:5000/images/Devanom.jpg",
            "prddes": "This is Beer Devanom",
            "typeprd": { // คือส่วนที่ populate
                "_id": "6437f86bc9902cff346c14a3", // ส่วนของ model productType
                "Prdtype_name": "BeerCraftType",
                "createdAt": "2023-04-13T12:41:15.444Z",
                "updatedAt": "2023-04-13T12:41:15.444Z",
                "__v": 0
            }
        },